// Code generated by MockGen. DO NOT EDIT.
// Source: url_shortner_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "main/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUrlShortnerService is a mock of UrlShortnerService interface.
type MockUrlShortnerService struct {
	ctrl     *gomock.Controller
	recorder *MockUrlShortnerServiceMockRecorder
}

// MockUrlShortnerServiceMockRecorder is the mock recorder for MockUrlShortnerService.
type MockUrlShortnerServiceMockRecorder struct {
	mock *MockUrlShortnerService
}

// NewMockUrlShortnerService creates a new mock instance.
func NewMockUrlShortnerService(ctrl *gomock.Controller) *MockUrlShortnerService {
	mock := &MockUrlShortnerService{ctrl: ctrl}
	mock.recorder = &MockUrlShortnerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlShortnerService) EXPECT() *MockUrlShortnerServiceMockRecorder {
	return m.recorder
}

// Shorten mocks base method.
func (m *MockUrlShortnerService) Shorten(string) model.ShortenResponseModel {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Shorten")
	ret0, _ := ret[0].(model.ShortenResponseModel)
	return ret0
}

// Shorten indicates an expected call of Shorten.
func (mr *MockUrlShortnerServiceMockRecorder) Shorten() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shorten", reflect.TypeOf((*MockUrlShortnerService)(nil).Shorten))
}
